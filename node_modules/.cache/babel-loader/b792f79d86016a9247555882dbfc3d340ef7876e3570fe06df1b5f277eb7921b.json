{"ast":null,"code":"var _jsxFileName = \"/Users/marinagantyuk/Desktop/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { useEffect, useState } from \"react\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList({\n  numJokesToGet = 5\n}) {\n  _s();\n  let [jokes, setJokes] = useState([]);\n  let [isLoading, setIsLoading] = useState(true);\n\n  /* at mount, get jokes */\n  useEffect(() => {\n    getJokes();\n  });\n\n  /* retrieve jokes from API */\n\n  async function getJokes() {\n    try {\n      // load jokes one at a time, adding not-yet-seen jokes\n      let jokes = [];\n      let seenJokes = new Set();\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          ...joke\n        } = res.data;\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({\n            ...joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n      setIsLoading(false);\n      setJokes(jokes);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  /* empty joke list, set to loading state, and then call getJokes */\n\n  function generateNewJokes() {\n    setIsLoading(true);\n    getJokes();\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes(st => st.jokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n      text: j.joke,\n      id: j.id,\n      votes: j.votes,\n      vote: vote\n    }, j.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(JokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["axios","Joke","useEffect","useState","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","seenJokes","Set","length","props","res","get","headers","Accept","joke","data","has","id","add","push","votes","console","log","err","error","generateNewJokes","vote","delta","st","map","j","sortedJokes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/Users/marinagantyuk/Desktop/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { useEffect, useState } from \"react\";\n\n/** List of jokes. */\n\nfunction JokeList({ numJokesToGet = 5 }) {\n  let [jokes, setJokes] = useState([]);\n  let [isLoading, setIsLoading] = useState(true);\n\n  /* at mount, get jokes */\n  useEffect(() => {\n    getJokes();\n  });\n\n  /* retrieve jokes from API */\n\n  async function getJokes() {\n    try {\n      // load jokes one at a time, adding not-yet-seen jokes\n      let jokes = [];\n      let seenJokes = new Set();\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n        let { ...joke } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({ ...joke, votes: 0 });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n      setIsLoading(false);\n      setJokes(jokes);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  /* empty joke list, set to loading state, and then call getJokes */\n\n  function generateNewJokes() {\n    setIsLoading(true);\n    getJokes();\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes((st) =>\n      st.jokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n        Get New Jokes\n      </button>\n\n      {sortedJokes.map((j) => (\n        <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n      ))}\n    </div>\n  );\n}\n\nexport default JokeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}